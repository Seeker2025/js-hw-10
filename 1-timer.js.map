{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconsole.log('Timer module loaded');\n// let timer = 5;\n\n////// Unix timestamp\n// const time = Date.now();\n// console.log(time);\n\n// const intervalTime = setInterval(() => {\n//     timer-= 1;\n//     console.log(timer);\n//     if(timer === 0) {\n//         clearInterval(intervalTime);\n//         console.log('Timer stopped');\n//     }\n//     }, 1000);\n\nlet userSelectedDate = null;\nconst UNIX_Time_now = Date.now();\n////input\nconst input = document.querySelector('input[type=\"text\"]'); \n\nconst daysRef = document.querySelector('.value[data-days]');\nconst hoursRef = document.querySelector('.value[data-hours]');\nconst minutesRef = document.querySelector('.value[data-minutes]');\nconst secondsRef = document.querySelector('.value[data-seconds]');\n////button\nconst startRef = document.querySelector('button[data-start]');\nstartRef.disabled = true;\ninput.disabled = false;\n// const zerro = 0;\n// console.log(daysRef);\n// console.log(UNIX_Time_now);\n// console.log(startRef);\n\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      // console.log(selectedDates[0]);\n      // console.log(selectedDates[0].getTime());\n      userSelectedDate = selectedDates[0];\n      const userDate = selectedDates[0].getTime();\n      // const startTime = Date.now();\n      let difference = userDate - UNIX_Time_now;\n      // let difference = 6000; ////// test\n      // console.log(userDate>UNIX_Time_now);\n      let { days, hours, minutes, seconds } = convertMs(difference);\n      // intervalFor(difference);\n      // let num02 = 10000;\n      //const intervalTime = setInterval(() => {\n       \n      // let {days, hours, minutes, seconds} = convertMs(num);\n      // console.log({ days, hours, minutes, seconds });\n       if(userDate < UNIX_Time_now){\n                  console.log('No!');\n                  startRef.disabled = true;\n                  // input.disabled = true;\n                  // input.classList.add('gray');\n                  window.alert(\"Please choose a date in the future\");\n                      iziToast.show({\n                        position: 'topRight', // bottomRight, bottomLeft, topRight\n                        backgroundColor: 'red',\n                        titleColor: 'white',\n                        messageColor: 'white',\n                                  // theme: 'light', //light\n                                  // color: 'green', // blue, red, green, yellow\n                        title: 'Date in Past!',\n                        message: \"Please choose a date in the future\"\n                              });\n                  const{ days, hours, minutes, seconds }=convertMs(0);\n                  uiLayout({ days, hours, minutes, seconds });\n                  // daysRef.textContent = '00';\n                  // hoursRef.textContent = '00';\n                  // minutesRef.textContent = '00';\n                  // secondsRef.textContent = '00';\n             }\n        else{\n        uiLayout({ days, hours, minutes, seconds });\n        startRef.disabled = false;\n      }\n           \n      startRef.addEventListener('click',  ()=>{\n        //  console.log(userDate);\n        //  console.log(UNIX_Time_now);\n         \n        // startRef.disabled = true;\n        // input.disabled = true;\n        // input.classList.add('gray');\n\n        const intervalTime = setInterval(()=>{\n          // console.log(difference);\n              startRef.disabled = true;\n              input.disabled = true;\n              input.classList.add('gray');\n          difference-= 1000;\n              \n              if(difference <= 0) {\n                clearInterval(intervalTime);\n                console.log('Timer stopped');\n                input.disabled = false;\n                input.classList.remove('gray');\n                }\n          let {days, hours, minutes, seconds} = convertMs(difference);\n          console.log({ days, hours, minutes, seconds });\n          // console.log(difference);\n          uiLayout({days, hours, minutes, seconds});\n        }, 1000)\n      \n      });\n          \n              //  let { days, hours, minutes, seconds } = convertMs(difference);\n              //   console.log({ days, hours, minutes, seconds });\n     \n      // console.log(`${days}::${hours}::${minutes}::${seconds}`);\n      // console.log(realObj);\n      // uiLayout(realObj);\n      // intervalFor(difference);\n      // days.textContent='22';\n    // }, 1000);\n        \n     },\n  };\n\n  const intervalFor=(difference)=>{\n  const intervalTime = setInterval(() => {\n    \n    //  difference-= 1000;\n    //      if(difference <= 0) {\n    //     clearInterval(intervalTime);\n    //     console.log('Timer stopped');\n    //     return;\n    //     }\n\n        console.log(difference);\n       \n    // let realObj = null;\n    let { days, hours, minutes, seconds } = convertMs(difference);\n    // console.log({ days, hours, minutes, seconds });\n      // loop(timer)\n    // console.log(timer);\n    // console.log(`${days}::${hours}::${minutes}::${seconds}`);\n    // console.log(`${seconds}`);\n    // console.log(difference);\n    \n    // uiLayout({ days, hours, minutes, seconds });\n    \n    // if(timer === 0) {\n    //     clearInterval(intervalTime);\n    //     console.log('Timer stopped');\n    // }\n    \n    // timer-= 1;\n\n    }, 1000);\n}\n\nfunction uiLayout({days, hours, minutes, seconds}){\n    daysRef.textContent = days;\n    hoursRef.textContent = hours;\n    minutesRef.textContent = minutes;\n    secondsRef.textContent = seconds;\n  }\n\n//   function setFun(ooo){\n//     userSelectedDate = ooo;\n//     setTimeout(()=>{\n//   // console.log('userSelectedDate');\n//   console.log(userSelectedDate);\n// }, 5000)\n//   }\n\n//    <button type=\"button\" data-start>Start</button>\n  //  const btn = document.querySelector('[data-start]'); \n  //  console.log(input);\n  //  console.log(btn);\n\n      function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = padThree(Math.floor(ms / day));\n    // Remaining hours\n    const hours =  pad(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes =  pad(Math.floor(((ms % day) % hour) / minute));\n    // Remaining seconds\n    const seconds =  pad(Math.floor((((ms % day) % hour) % minute) / second));\n  \n    return { days, hours, minutes, seconds };\n  }\n\n  //  function getTimeComponents(time) {\n  //   const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  //   const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  //   const secs = pad(Math.floor((time%(1000*60))/1000));\n  //   return { hours, mins, secs };\n  //   }\n  //   function pad(value) {\n  //   return String(value).padStart(2, '0');\n  //   }\n\n   //console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  //console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  //console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n  function pad(value){\n    return value.toString().padStart(2, '0');\n  }\n   function padThree(value){\n    return value.toString().padStart(3, '0');\n  }\n\n////// Main function\nflatpickr(input, options);\n\n// const date = new Date(userSelectedDate);\n// console.log(aa);\n// const date02 = new Date();\n// console.log(Date.now(date02));\n\n// const t = Date.now();\n// const t02 = Date.now();\n// console.log(t);\n// console.log(t02);\n// options.onClose();\n\n// console.log(userSelectedDate);\n\n// setTimeout(()=>{\n//   // console.log('userSelectedDate');\n//   console.log(userSelectedDate);\n// }, 8000)\n\n// const date = new Date();\n// console.log(date);\n// console.log(date.getTime());\n\n// const date04 = Date.now();\n// console.log(date04);\n\n"],"names":["UNIX_Time_now","input","daysRef","hoursRef","minutesRef","secondsRef","startRef","options","selectedDates","userDate","difference","days","hours","minutes","seconds","convertMs","iziToast","uiLayout","intervalTime","ms","padThree","pad","value","flatpickr"],"mappings":"+IAUA,QAAQ,IAAI,qBAAqB,EAiBjC,MAAMA,EAAgB,KAAK,IAAK,EAE1BC,EAAQ,SAAS,cAAc,oBAAoB,EAEnDC,EAAU,SAAS,cAAc,mBAAmB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAa,SAAS,cAAc,sBAAsB,EAC1DC,EAAa,SAAS,cAAc,sBAAsB,EAE1DC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GACpBL,EAAM,SAAW,GAMf,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGFA,EAAc,CAAC,EAClC,MAAMC,EAAWD,EAAc,CAAC,EAAE,QAAS,EAE3C,IAAIE,EAAaD,EAAWT,EAGxB,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAU,EAO3D,GAAGD,EAAWT,EAAc,CACjB,QAAQ,IAAI,KAAK,EACjBM,EAAS,SAAW,GAGpB,OAAO,MAAM,oCAAoC,EAC7CU,EAAS,KAAK,CACZ,SAAU,WACV,gBAAiB,MACjB,WAAY,QACZ,aAAc,QAGd,MAAO,gBACP,QAAS,oCACjC,CAA+B,EACb,KAAK,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAACC,EAAU,CAAC,EAClDE,EAAS,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,CAK5D,MAEQG,EAAS,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,EAC1CR,EAAS,SAAW,GAGtBA,EAAS,iBAAiB,QAAU,IAAI,CAQtC,MAAMY,EAAe,YAAY,IAAI,CAE/BZ,EAAS,SAAW,GACpBL,EAAM,SAAW,GACjBA,EAAM,UAAU,IAAI,MAAM,EAC9BS,GAAa,IAENA,GAAc,IACf,cAAcQ,CAAY,EAC1B,QAAQ,IAAI,eAAe,EAC3BjB,EAAM,SAAW,GACjBA,EAAM,UAAU,OAAO,MAAM,GAEnC,GAAI,CAAC,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAIC,EAAUL,CAAU,EAC1D,QAAQ,IAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,EAAS,EAE7CG,EAAS,CAAC,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAC,CAClD,EAAW,GAAI,CAEf,CAAO,CAYD,CACH,EAmCH,SAASG,EAAS,CAAC,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAE,CAC9CZ,EAAQ,YAAcS,EACtBR,EAAS,YAAcS,EACvBR,EAAW,YAAcS,EACzBR,EAAW,YAAcS,CAC7B,CAeM,SAASC,EAAUI,EAAI,CAQzB,MAAMR,EAAOS,EAAS,KAAK,MAAMD,EAAK,KAAG,CAAC,EAEpCP,EAASS,EAAI,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EAE1CN,EAAWQ,EAAI,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEvDL,EAAWO,EAAI,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAExE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC5C,CAgBE,SAASO,EAAIC,EAAM,CACjB,OAAOA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC3C,CACG,SAASF,EAASE,EAAM,CACvB,OAAOA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC3C,CAGAC,EAAUtB,EAAOM,CAAO"}